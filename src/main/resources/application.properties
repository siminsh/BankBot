# Server configuration
server.port=8080

# Database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/bankbot
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Kafka configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=bankbot-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.bankbot.domain.model,com.bankbot.application.dto,com.bankbot.infrastructure.kafka.model

# Kafka Exactly-once and ordering settings
spring.kafka.producer.acks=all
spring.kafka.producer.retries=10
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.consumer.properties.isolation.level=read_committed
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE

# Kafka Dead Letter Queue
spring.kafka.listener.missing-topics-fatal=false

# OpenAI configuration
openai.api.key=your_openai_api_key
openai.model=gpt-3.5-turbo

# Topic names
kafka.topic.user-message=user-messages
kafka.topic.chatbot-response=chatbot-responses
kafka.topic.request-reply=request-reply
kafka.topic.dlt=dead-letter-topic
kafka.topic.outbox=transaction-outbox
